<h1>home</h1>
<p>這是40823233所建立的網站，新建不久暫時還沒有其他的東西。</p>
<p>這是我的倉儲：<a href="https://github.com/40823233/cp2019">https://github.com/40823233/cp2019</a></p>
<p><img alt="x" height="500" src="/images/20170128_155549.jpg" width="800"/></p>
<h2>作業</h2>
<h3>dart</h3>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823233&gh_repo=cp2019&gh_path=dart_ex/" + dirname + "&theme=dark"
;    document.getElementById("iframe").src = source ;
}
function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=40823233&gh_repo=cp2019&gh_path=dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}
function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=mdecourse&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}
function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}
function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button> <button onclick="getDart('hello')">Hello</button> <button onclick="getDart('for loop')">For Loop</button> <button onclick="getDart('sum')">Sum</button> <button onclick="getDart('runge-kutta')">Runge-Kutta</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=mdecourse&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/mass_spring_damping&amp;theme=dark" width="800"></iframe></p>
<p><img alt="" height="347" src="/get_page/images/A2017-04-21-1.png" width="500"/></p>
<h3>影片</h3>
<p><br/><iframe allowfullscreen="allowfullscreen" height="400" src="https://youtu.be/B3Z1BMFNkpw" width="600"></iframe></p>
<p></p><h1>倉庫</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>倉儲複製</h4>
<p><span style="vertical-align: inherit;">git clone --recurse-submodules<span> </span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a><a href="https://github.com/mdecourse/newcms.git"></a></span></span></p>
<p>這是還沒有設定使用者時的代碼。</p>
<p><span style="vertical-align: inherit;">git clone --recurse-submodules<span> </span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/40823233/cp2019.git">https://github.com/40823233/cp2019.git</a><a href="https://github.com/mdecourse/newcms.git"></a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">這是我的倉儲的複製方法。</span></span></p>
<h4>上傳三連</h4>
<p>git add .</p>
<p>git commit -m  "add repositere link"</p>
<p>git push</p>
<p>然後打帳號密碼，如果中途有錯的話cmd上面會告訴你叫你打一些東西，好了之後重複上述動作應該就行了。</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以git子模塊添加  </span></span><a href="https://github.com/mdecourse/cmsimde"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecourse/cmsimde</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  cmsimde</span></span></p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">git clone --recurse-submodules </span></span><a href="https://github.com/mdecourse/newcms.git"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecourse/newcms.git</span></span></a></p>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>